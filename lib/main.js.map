{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'CUPOFJOE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\n#...........................................................................................................\n@types                    = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  type_of }               = @types.export()\n#...........................................................................................................\n{ jr }                    = CND\nMultimix                  = require 'multimix'\n\n#-----------------------------------------------------------------------------------------------------------\nremove_notgiven = ( list ) ->\n  return list.filter ( e ) -> e? ### mutating variant ###\n  # return ( e for e in list when e? ) ### non-mutating variant ###\n\n#-----------------------------------------------------------------------------------------------------------\n@expand = ->\n  @_expand @collector\n  @collector = @collector.flat Infinity if @settings.flatten\n  return @_unwrap @collector\n\n#-----------------------------------------------------------------------------------------------------------\n@_expand = ( list ) ->\n  idx = -1\n  loop\n    idx++; break if idx > list.length - 1\n    unless ( x = list[ idx ] )? then list.splice idx, 1; idx--; continue\n    if ( type = type_of x ) is 'list'\n      if ( x = remove_notgiven x ).length is 0 then list.splice idx, 1; idx--; continue\n      @_expand list[ idx ] = x\n    else if type is 'function'\n      @target = []; x(); list[ idx .. idx ] = @target; idx--\n    else if type is 'asyncfunction'\n      throw new Error \"^7767^ at index #{idx}: unable to synchronically expand async function\"\n    else if type is 'promise'\n      throw new Error \"^7767^ at index #{idx}: unable to synchronically expand promise\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_unwrap = ( x ) ->\n  return x unless isa.list x\n  # x = x.filter ( e ) -> e? and not ( ( isa.list e ) and ( e.length is 0 ) )\n  return x unless x.length is 1\n  return x unless isa.list x[ 0 ]\n  return @_unwrap x[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@cram = ( x... ) ->\n  @target.push x\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nMAIN = @\nclass Cupofjoe extends Multimix\n  @include MAIN, { overwrite: false, }\n  # @extend MAIN, { overwrite: false, }\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( settings = null) ->\n    super()\n    @settings   = { { flatten: false, }..., settings..., }\n    @collector  = []\n    @target     = @collector\n    return @\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = { Cupofjoe, }\n\n\n############################################################################################################\nif module is require.main then do =>\n  null\n\n"
  ]
}